{"version":3,"sources":["../../../src/context/providers/MessageProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport { useMemo, type FC, type PropsWithChildren } from \"react\";\nimport {\n  AssistantProvider,\n  AssistantApi,\n  createAssistantApiField,\n} from \"../react/AssistantApiContext\";\nimport { useResource } from \"@assistant-ui/tap/react\";\nimport { asStore } from \"../../utils/tap-store\";\nimport {\n  ThreadMessageClientProps,\n  ThreadMessageClient,\n} from \"../../client/ThreadMessageClient\";\n\nexport const MessageProvider: FC<\n  PropsWithChildren<ThreadMessageClientProps>\n> = ({ children, ...props }) => {\n  const store = useResource(asStore(ThreadMessageClient(props)));\n  const api = useMemo(() => {\n    return {\n      message: createAssistantApiField({\n        source: \"root\",\n        query: {},\n        get: () => store.getState().api,\n      }),\n      subscribe: store.subscribe,\n      flushSync: store.flushSync,\n    } satisfies Partial<AssistantApi>;\n  }, [store]);\n\n  return <AssistantProvider api={api}>{children}</AssistantProvider>;\n};\n"],"mappings":";;;AAEA,SAAS,eAAgD;AACzD;AAAA,EACE;AAAA,EAEA;AAAA,OACK;AACP,SAAS,mBAAmB;AAC5B,SAAS,eAAe;AACxB;AAAA,EAEE;AAAA,OACK;AAkBE;AAhBF,IAAM,kBAET,CAAC,EAAE,UAAU,GAAG,MAAM,MAAM;AAC9B,QAAM,QAAQ,YAAY,QAAQ,oBAAoB,KAAK,CAAC,CAAC;AAC7D,QAAM,MAAM,QAAQ,MAAM;AACxB,WAAO;AAAA,MACL,SAAS,wBAAwB;AAAA,QAC/B,QAAQ;AAAA,QACR,OAAO,CAAC;AAAA,QACR,KAAK,MAAM,MAAM,SAAS,EAAE;AAAA,MAC9B,CAAC;AAAA,MACD,WAAW,MAAM;AAAA,MACjB,WAAW,MAAM;AAAA,IACnB;AAAA,EACF,GAAG,CAAC,KAAK,CAAC;AAEV,SAAO,oBAAC,qBAAkB,KAAW,UAAS;AAChD;","names":[]}