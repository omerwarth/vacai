"use client";

// src/context/providers/MessageProvider.tsx
import { useMemo } from "react";
import {
  AssistantProvider,
  createAssistantApiField
} from "../react/AssistantApiContext.js";
import { useResource } from "@assistant-ui/tap/react";
import { asStore } from "../../utils/tap-store/index.js";
import {
  ThreadMessageClient
} from "../../client/ThreadMessageClient.js";
import { jsx } from "react/jsx-runtime";
var MessageProvider = ({ children, ...props }) => {
  const store = useResource(asStore(ThreadMessageClient(props)));
  const api = useMemo(() => {
    return {
      message: createAssistantApiField({
        source: "root",
        query: {},
        get: () => store.getState().api
      }),
      subscribe: store.subscribe,
      flushSync: store.flushSync
    };
  }, [store]);
  return /* @__PURE__ */ jsx(AssistantProvider, { api, children });
};
export {
  MessageProvider
};
//# sourceMappingURL=MessageProvider.js.map