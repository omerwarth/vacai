{"version":3,"sources":["../../src/devtools/DevToolsHooks.ts"],"sourcesContent":["import { AssistantApi } from \"../context/react/AssistantApiContext\";\nimport { Unsubscribe } from \"@assistant-ui/tap\";\n\nexport interface EventLog {\n  time: Date;\n  event: string;\n  data: unknown;\n}\n\ninterface DevToolsApiEntry {\n  api: Partial<AssistantApi>;\n  logs: EventLog[];\n}\n\ninterface DevToolsHook {\n  apis: Map<number, DevToolsApiEntry>;\n  nextId: number;\n  listeners: Set<(apiId: number) => void>;\n}\n\ndeclare global {\n  interface Window {\n    __ASSISTANT_UI_DEVTOOLS_HOOK__?: DevToolsHook;\n  }\n}\n\nlet cachedHook: DevToolsHook | undefined;\n\nconst getHook = (): DevToolsHook => {\n  if (cachedHook) {\n    return cachedHook;\n  }\n\n  const createHook = (): DevToolsHook => ({\n    apis: new Map(),\n    nextId: 0,\n    listeners: new Set(),\n  });\n\n  if (typeof window === \"undefined\") {\n    cachedHook = createHook();\n    return cachedHook;\n  }\n\n  const existingHook = window.__ASSISTANT_UI_DEVTOOLS_HOOK__;\n  if (existingHook) {\n    cachedHook = existingHook;\n    return existingHook;\n  }\n\n  const newHook = createHook();\n  window.__ASSISTANT_UI_DEVTOOLS_HOOK__ = newHook;\n  cachedHook = newHook;\n  return newHook;\n};\n\nexport class DevToolsHooks {\n  static subscribe(listener: () => void): Unsubscribe {\n    const hook = getHook();\n    hook.listeners.add(listener);\n    return () => {\n      hook.listeners.delete(listener);\n    };\n  }\n\n  static clearEventLogs(apiId: number): void {\n    const hook = getHook();\n    const entry = hook.apis.get(apiId);\n    if (!entry) return;\n\n    entry.logs = [];\n    DevToolsHooks.notifyListeners(apiId);\n  }\n\n  static getApis(): Map<number, DevToolsApiEntry> {\n    return getHook().apis;\n  }\n\n  private static notifyListeners(apiId: number): void {\n    const hook = getHook();\n    hook.listeners.forEach((listener) => listener(apiId));\n  }\n}\n\nexport class DevToolsProviderApi {\n  private static readonly MAX_EVENT_LOGS_PER_API = 200;\n\n  static register(api: Partial<AssistantApi>): Unsubscribe {\n    const hook = getHook();\n\n    for (const entry of hook.apis.values()) {\n      if (entry.api === api) {\n        return () => {};\n      }\n    }\n\n    const apiId = hook.nextId++;\n    const entry: DevToolsApiEntry = {\n      api,\n      logs: [],\n    };\n\n    const eventUnsubscribe = api.on?.(\"*\", (e) => {\n      const entry = hook.apis.get(apiId);\n      if (!entry) return;\n\n      entry.logs.push({\n        time: new Date(),\n        event: e.event,\n        data: e.payload,\n      });\n\n      if (entry.logs.length > DevToolsProviderApi.MAX_EVENT_LOGS_PER_API) {\n        entry.logs = entry.logs.slice(\n          -DevToolsProviderApi.MAX_EVENT_LOGS_PER_API,\n        );\n      }\n\n      DevToolsProviderApi.notifyListeners(apiId);\n    });\n\n    const stateUnsubscribe = api.subscribe?.(() => {\n      DevToolsProviderApi.notifyListeners(apiId);\n    });\n\n    hook.apis.set(apiId, entry);\n    DevToolsProviderApi.notifyListeners(apiId);\n\n    return () => {\n      const hook = getHook();\n      const entry = hook.apis.get(apiId);\n      if (!entry) return;\n\n      eventUnsubscribe?.();\n      stateUnsubscribe?.();\n\n      hook.apis.delete(apiId);\n\n      DevToolsProviderApi.notifyListeners(apiId);\n    };\n  }\n\n  private static notifyListeners(apiId: number): void {\n    const hook = getHook();\n    hook.listeners.forEach((listener) => listener(apiId));\n  }\n}\n"],"mappings":";AA0BA,IAAI;AAEJ,IAAM,UAAU,MAAoB;AAClC,MAAI,YAAY;AACd,WAAO;AAAA,EACT;AAEA,QAAM,aAAa,OAAqB;AAAA,IACtC,MAAM,oBAAI,IAAI;AAAA,IACd,QAAQ;AAAA,IACR,WAAW,oBAAI,IAAI;AAAA,EACrB;AAEA,MAAI,OAAO,WAAW,aAAa;AACjC,iBAAa,WAAW;AACxB,WAAO;AAAA,EACT;AAEA,QAAM,eAAe,OAAO;AAC5B,MAAI,cAAc;AAChB,iBAAa;AACb,WAAO;AAAA,EACT;AAEA,QAAM,UAAU,WAAW;AAC3B,SAAO,iCAAiC;AACxC,eAAa;AACb,SAAO;AACT;AAEO,IAAM,gBAAN,MAAM,eAAc;AAAA,EACzB,OAAO,UAAU,UAAmC;AAClD,UAAM,OAAO,QAAQ;AACrB,SAAK,UAAU,IAAI,QAAQ;AAC3B,WAAO,MAAM;AACX,WAAK,UAAU,OAAO,QAAQ;AAAA,IAChC;AAAA,EACF;AAAA,EAEA,OAAO,eAAe,OAAqB;AACzC,UAAM,OAAO,QAAQ;AACrB,UAAM,QAAQ,KAAK,KAAK,IAAI,KAAK;AACjC,QAAI,CAAC,MAAO;AAEZ,UAAM,OAAO,CAAC;AACd,mBAAc,gBAAgB,KAAK;AAAA,EACrC;AAAA,EAEA,OAAO,UAAyC;AAC9C,WAAO,QAAQ,EAAE;AAAA,EACnB;AAAA,EAEA,OAAe,gBAAgB,OAAqB;AAClD,UAAM,OAAO,QAAQ;AACrB,SAAK,UAAU,QAAQ,CAAC,aAAa,SAAS,KAAK,CAAC;AAAA,EACtD;AACF;AAEO,IAAM,sBAAN,MAAM,qBAAoB;AAAA,EAC/B,OAAwB,yBAAyB;AAAA,EAEjD,OAAO,SAAS,KAAyC;AACvD,UAAM,OAAO,QAAQ;AAErB,eAAWA,UAAS,KAAK,KAAK,OAAO,GAAG;AACtC,UAAIA,OAAM,QAAQ,KAAK;AACrB,eAAO,MAAM;AAAA,QAAC;AAAA,MAChB;AAAA,IACF;AAEA,UAAM,QAAQ,KAAK;AACnB,UAAM,QAA0B;AAAA,MAC9B;AAAA,MACA,MAAM,CAAC;AAAA,IACT;AAEA,UAAM,mBAAmB,IAAI,KAAK,KAAK,CAAC,MAAM;AAC5C,YAAMA,SAAQ,KAAK,KAAK,IAAI,KAAK;AACjC,UAAI,CAACA,OAAO;AAEZ,MAAAA,OAAM,KAAK,KAAK;AAAA,QACd,MAAM,oBAAI,KAAK;AAAA,QACf,OAAO,EAAE;AAAA,QACT,MAAM,EAAE;AAAA,MACV,CAAC;AAED,UAAIA,OAAM,KAAK,SAAS,qBAAoB,wBAAwB;AAClE,QAAAA,OAAM,OAAOA,OAAM,KAAK;AAAA,UACtB,CAAC,qBAAoB;AAAA,QACvB;AAAA,MACF;AAEA,2BAAoB,gBAAgB,KAAK;AAAA,IAC3C,CAAC;AAED,UAAM,mBAAmB,IAAI,YAAY,MAAM;AAC7C,2BAAoB,gBAAgB,KAAK;AAAA,IAC3C,CAAC;AAED,SAAK,KAAK,IAAI,OAAO,KAAK;AAC1B,yBAAoB,gBAAgB,KAAK;AAEzC,WAAO,MAAM;AACX,YAAMC,QAAO,QAAQ;AACrB,YAAMD,SAAQC,MAAK,KAAK,IAAI,KAAK;AACjC,UAAI,CAACD,OAAO;AAEZ,yBAAmB;AACnB,yBAAmB;AAEnB,MAAAC,MAAK,KAAK,OAAO,KAAK;AAEtB,2BAAoB,gBAAgB,KAAK;AAAA,IAC3C;AAAA,EACF;AAAA,EAEA,OAAe,gBAAgB,OAAqB;AAClD,UAAM,OAAO,QAAQ;AACrB,SAAK,UAAU,QAAQ,CAAC,aAAa,SAAS,KAAK,CAAC;AAAA,EACtD;AACF;","names":["entry","hook"]}